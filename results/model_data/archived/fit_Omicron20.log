── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.4     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
All packages are already installed.
[1] TRUE
Loading required package: pomp

Welcome to pomp!

As of version 4.6, no user-visible pomp function has a name that
includes a dot ('.'). Function names have been changed to replace the
dot with an underscore ('_'). For more information, see the pomp blog:
https://kingaa.github.io/pomp/blog.html.


Attaching package: ‘pomp’

The following object is masked from ‘package:purrr’:

    map

Rows: 202768 Columns: 4
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (2): Entity, Code
dbl  (1): international_travel_controls
date (1): Day

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
`summarise()` has grouped output by 'continent'. You can override using the
`.groups` argument.
Joining with `by = join_by(code)`
Joining with `by = join_by(code)`
`summarise()` has grouped output by 'date', 'date_decimal'. You can override
using the `.groups` argument.
`summarise()` has grouped output by 'date', 'code_o'. You can override using
the `.groups` argument.
The legacy packages maptools, rgdal, and rgeos, underpinning the sp package,
which was just loaded, will retire in October 2023.
Please refer to R-spatial evolution reports for details, especially
https://r-spatial.org/r/2023/05/15/evolution4.html.
It may be desirable to make the sf package available;
package maintainers should consider adding sf to Suggests:.
The sp package is now running under evolution status 2
     (status 2 uses the sf package in place of rgdal)
Support for Spatial objects (`sp`) will be deprecated in {rnaturalearth} and will be removed in a future release of the package. Please use `sf` objects with {rnaturalearth}. For example: `ne_download(returnclass = 'sf')`

Attaching package: ‘rnaturalearthdata’

The following object is masked from ‘package:rnaturalearth’:

    countries110

Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE
`summarise()` has grouped output by 'code_o', 'code_d'. You can override using
the `.groups` argument.
`summarise()` has grouped output by 'pair'. You can override using the
`.groups` argument.
Rows: 239370 Columns: 7
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
chr  (4): continent, sequencing_country, parent_country, variant
dbl  (2): date_decimal, N
date (1): Collection date

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
`summarise()` has grouped output by 'Collection date', 'date_decimal',
'sequencing_country', 'parent_country'. You can override using the `.groups`
argument.
`summarise()` has grouped output by 'Collection date', 'date_decimal', 'code'.
You can override using the `.groups` argument.
[1] "country_under_investigation: "
 [1] "AE"        "AF_others" "AR"        "AS_others" "AU"        "BR"       
 [7] "CA"        "CL"        "DE"        "ES"        "EU_others" "FR"       
[13] "GB"        "HK"        "IN"        "JP"        "KR"        "MA"       
[19] "MX"        "NA_others" "NG"        "NZ"        "OC_others" "PG"       
[25] "SA_others" "TN"        "TR"        "US"        "ZA"       
`summarise()` has grouped output by 'Collection date', 'date_decimal', 'code'.
You can override using the `.groups` argument.
`summarise()` has grouped output by 'Collection date', 'date_decimal',
'sequencing_country', 'parent_country'. You can override using the `.groups`
argument.
List of 4
 $ n_days  : num 181
 $ order   : chr [1:29] "AE" "AF_others" "AR" "AS_others" ...
 $ v_by_g_C:Formal class 'Csnippet' [package "pomp"] with 1 slot
 $ mov_mat : tibble [147,784 × 5] (S3: tbl_df/tbl/data.frame)
`summarise()` has grouped output by 'date'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'date'. You can override using the
`.groups` argument.
Joining with `by = join_by(code)`
Joining with `by = join_by(code)`
`summarise()` has grouped output by 'date', 'loc_name'. You can override using
the `.groups` argument.
`summarise()` has grouped output by 'date', 'loc_name'. You can override using
the `.groups` argument.
Warning message:
The `returnclass` argument of `ne_download()` sp as of rnaturalearth 1.0.0.
ℹ Please use `sf` objects with {rnaturalearth}, support for Spatial objects
  (sp) will be removed in a future release of the package. 
Joining with `by = join_by(code)`
`summarise()` has grouped output by 'code'. You can override using the
`.groups` argument.
`summarise()` has grouped output by 'date_decimal'. You can override using the
`.groups` argument.
[1] "The pre-fitted model is: low"
         [,1]    [,2]   [,3]
C_1_c       0   15151   2994
C_2_c       0       0      0
C_3_c       0       0      0
C_4_c       0     106     86
E_1_c 1366485 1088325 866969
E_2_c       0       0      0
E_3_c       0       0      0
E_4_c    5331  271159 258516
I_1_c 1869995 1343471 985978
I_2_c       0       0      0
I_3_c       0       0      0
I_4_c    7295    5303  59466
[1] "bpfilter logLik for Omicron20 model: 24882.0165639497"
   user  system elapsed 
376.791   5.008 383.415 
[1] TRUE
[1] "Starting global search"
[1] "Tue May 21 11:01:23 2024"
Loading required package: rngtools
[1] "Finished global search with time:"
     user    system   elapsed 
359348.84  13113.57   9835.56 
[1] "Tue May 21 13:45:19 2024"
[1] "Getting likelihoods for each parameter set in global search"
[1] "Finished getting likelihoods for each parameter set in global search with time:"
     user    system   elapsed 
424184.00  15242.57  11714.54 
[1] "Tue May 21 17:00:34 2024"
[1] "Log-likelihoods for each parameter set in global search:"
# A tibble: 72 × 3
   which logLik    se
   <int>  <dbl> <dbl>
 1     1 24884. 0.113
 2     2 24875. 0.122
 3     3 24890. 0.115
 4     4 24859. 0.243
 5     5 24876. 0.130
 6     6 24859. 0.226
 7     7 24969. 0.575
 8     8 24869. 0.521
 9     9 24900. 0.109
10    10 24889. 0.203
# ℹ 62 more rows
[1] "Starting local search"
[1] "Tue May 21 17:00:38 2024"
[1] "Finished local search with time:"
      user     system    elapsed 
171774.842   4359.850   6124.705 
[1] "Tue May 21 18:42:43 2024"
[1] "Getting likelihoods for each parameter set in local search"
[1] "Finished getting likelihoods for each parameter set in local search with time:"
      user     system    elapsed 
208301.133   4969.492   4659.595 
[1] "Tue May 21 20:00:23 2024"
[1] "Log-likelihoods for each parameter set in local search:"
# A tibble: 36 × 4
   which starting_set logLik    se
   <int>        <int>  <dbl> <dbl>
 1     1           18 24976. 0.210
 2     2           18 24976. 0.233
 3     3           18 24977. 0.179
 4     4           18 24976. 0.197
 5     5           69 24976. 0.296
 6     6           69 24975. 0.196
 7     7           69 24975. 0.167
 8     8           69 24976. 0.217
 9     9           34 24971. 0.256
10    10           34 24972. 0.245
# ℹ 26 more rows
[1] "Finished fitting model."
[1] "Tue May 21 20:00:23 2024"
